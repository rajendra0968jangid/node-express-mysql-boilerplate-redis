version: '3.9'

services:
  mysqldb:
    image: mysql:8.0
    container_name: mysql_container
    command: --default-authentication-plugin=mysql_native_password --bind-address=0.0.0.0
    restart: unless-stopped
    volumes:
      - ./dbinit/init.sql:/docker-entrypoint-initdb.d/init.sql 
      - mysql_data:/var/lib/mysql
    ports:
      - 3306:3306
    expose:
      - 3306
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u${DB_USER} -p${DB_PASS} || exit 1"]
      interval: 20s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysqldb
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASS}
    depends_on:
      mysqldb:
        condition: service_healthy
    networks:
      - app_network 

  redis:
    image: redis:latest
    container_name: redis_container
    command: >
      sh -c "if [ -n '${REDIS_PASSWORD}' ]; then
                redis-server --requirepass ${REDIS_PASSWORD};
              else
                redis-server;
              fi"
    restart: unless-stopped
    ports:
      - "6379:6379"
    expose:
      - 6379
    env_file:
      - .env
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "-p", "6379", "ping"]
      interval: 10s
      retries: 5
    depends_on:
      mysqldb:
        condition: service_healthy

  node:
    image: rajendra0968/mysql-express:latest
    container_name: node_app
    working_dir: /usr/src/app
    networks:
      - app_network
    ports:
      - "5000:5000"
    depends_on:
      mysqldb:
        condition: service_healthy
      phpmyadmin:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DB_HOST: mysqldb

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
